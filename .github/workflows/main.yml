name: Cl

on: [push, workflow_dispatch]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Download ngrok
      run: Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip

    - name: Extract ngrok
      run: Expand-Archive ngrok.zip

    - name: Auth with ngrok
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Enable RDP
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)

    - name: Install Chocolatey and VNC dependencies
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
        choco install -y x11vnc

    - name: Start VNC server
      run: |
        Start-Process x11vnc -ArgumentList "-forever -usepw -create -display :0"

    - name: Download and run noVNC
      run: |
        Invoke-WebRequest https://github.com/novnc/noVNC/archive/refs/heads/master.zip -OutFile noVNC.zip
        Expand-Archive noVNC.zip
        cd noVNC-master
        Start-Process python -ArgumentList "websockify --web ./vnc_auto.html 6080 localhost:5900" -NoNewWindow -PassThru

    - name: Create ngrok Tunnel
      run: .\ngrok\ngrok.exe tcp 6080
